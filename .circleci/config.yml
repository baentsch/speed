version: 2.1

parameters:
  new_openssl_commit:
    type: boolean
    default: false

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

jobs:
  ubuntu_x64_openssl:
    description: A template for building and pushing OQS performance testing Docker image on Ubuntu Bionic that depend on OQS-OpenSSL
    docker:
      - image: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - setup_remote_docker
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Build and test speed image
          command: |
            # The CircleCI executor offers 35 cores, but using
            # all of them might exhaust memory
            docker build --build-arg MAKE_DEFINES="-j 18" -t oqs-perf . &&
            docker run -it oqs-perf /opt/test/selftest.sh
          working_directory: perf
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - equal: [ true, << pipeline.parameters.new_openssl_commit >> ]
          steps:
            - run:
                name: Push all images
                command: |
                  docker tag oqs-perf $TARGETNAME/oqs-perf:latest &&
                  docker push $TARGETNAME/oqs-perf:latest 

  ubuntu_x64_kvm_bare:
    description: A template for building a kvm-supporting executor  
    machine:
      image: ubuntu-1604:202010-01
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: check env
          command: whoami 
      - run:
          name: Install kvm components
          command: sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt install apt-utils qemu qemu-kvm kmod -y 
      - run:
          name: Test environment
          command: uname -r
      - run:
          name: Test setup
          command: lsmod
      - run:
          name: Test kvm
          command: kvm-ok

  ubuntu_x64_kvm:
    description: A template for building a kvm-based Docker image using Ubuntu Bionic 
    docker:
      - image: openquantumsafe/ci-ubuntu-bionic-x86_64:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - *localCheckout #checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - setup_remote_docker
      #- run:
      #    name: Authenticate to Docker
      #    command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: add required packages & check kvm operation
          command: |
            apt-get update -y && apt-get upgrade -y && apt install apt-utils qemu qemu-kvm kmod -y && lsmod && modprobe kvm_intel && kvm-ok && ls cat /boot/config-*
          working_directory: kvm

workflows:
  version: 2.1
  build:
    jobs:
      - ubuntu_x64_kvm_bare:
          name: ubuntu-bionic-kvm-bare
          context: openquantumsafe
      #- ubuntu_x64_openssl:
      #    name: ubuntu-bionic
      #    context: openquantumsafe

